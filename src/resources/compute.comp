#version 460 core

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
layout (rgba32f, binding = 0) uniform image2D screen;
layout (rgba32f, binding = 1) uniform image2D newScreen;

void main() {
	ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy);
    vec2 uv = vec2(pixel_coords) / vec2(gl_NumWorkGroups.xy);

    int neighbors = 0;
    for(int i = -1; i <= 1; i++) {
        for(int j = -1; j <= 1; j++) {
            if(i == 0 && j == 0) continue;
            ivec2 neededPixel = pixel_coords + ivec2(i, j);
            neededPixel.x = neededPixel.x % int(gl_NumWorkGroups.x);
            neededPixel.y = neededPixel.y % int(gl_NumWorkGroups.y);
            float value = imageLoad(screen, neededPixel).r;
            if(value != 0) neighbors++;
        }
    }

    vec4 pixel = imageLoad(screen, pixel_coords);

    if(neighbors == 3) pixel = vec4(1);
    else if(neighbors == 2) {}
    else pixel = vec4(0);

	imageStore(newScreen, pixel_coords, pixel);
}
